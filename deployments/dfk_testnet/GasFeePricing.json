{
  "address": "0x9596A3C6a4B2597adCC5D6d69b281A7C49e3Fe6A",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_options",
          "type": "bytes"
        }
      ],
      "name": "decodeOptions",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dstGasPriceInWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dstGasTokenRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "txType",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        }
      ],
      "name": "encodeOptions",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "txType",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dstNativeAmt",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "dstAddress",
          "type": "bytes32"
        }
      ],
      "name": "encodeOptions",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dstChainId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_options",
          "type": "bytes"
        }
      ],
      "name": "estimateGasFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dstChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasUnitPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasTokenPriceRatio",
          "type": "uint256"
        }
      ],
      "name": "setCostPerChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe9888bc0e72fe85127aed30e126d9cd64120045f82d66c69bab8b4eadd13eba8",
  "receipt": {
    "to": null,
    "from": "0x235AF07E770f474d24F5bf73074735892371b40D",
    "contractAddress": "0x9596A3C6a4B2597adCC5D6d69b281A7C49e3Fe6A",
    "transactionIndex": 0,
    "gasUsed": "1053882",
    "logsBloom": "0x
    "blockHash": "0xc90abd951e436ac3cf470bafc116a9d4e4e88e3a3ab5e8c1144d9759c6a65db2",
    "transactionHash": "0xe9888bc0e72fe85127aed30e126d9cd64120045f82d66c69bab8b4eadd13eba8",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 4805,
        "transactionHash": "0xe9888bc0e72fe85127aed30e126d9cd64120045f82d66c69bab8b4eadd13eba8",
        "address": "0x9596A3C6a4B2597adCC5D6d69b281A7C49e3Fe6A",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000235af07e770f474d24f5bf73074735892371b40d"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xc90abd951e436ac3cf470bafc116a9d4e4e88e3a3ab5e8c1144d9759c6a65db2"
      }
    ],
    "blockNumber": 4805,
    "cumulativeGasUsed": "1053882",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "360da2149357ded6d5a48330109ca6e5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_options\",\"type\":\"bytes\"}],\"name\":\"decodeOptions\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dstGasPriceInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dstGasTokenRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"txType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"encodeOptions\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"txType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"dstAddress\",\"type\":\"bytes32\"}],\"name\":\"encodeOptions\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dstChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_options\",\"type\":\"bytes\"}],\"name\":\"estimateGasFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dstChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasUnitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasTokenPriceRatio\",\"type\":\"uint256\"}],\"name\":\"setCostPerChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"estimateGasFee(uint256,bytes)\":{\"params\":{\"_options\":\"Versioned struct used to instruct relayer on how to proceed with gas limits. Contains data on gas limit to submit tx with.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setCostPerChain(uint256,uint256,uint256)\":{\"params\":{\"_dstChainId\":\"The destination chain ID - typically, standard EVM chain ID, but differs on nonEVM chains\",\"_gasTokenPriceRatio\":\"USD gas ratio of dstGasToken / srcGasToken\",\"_gasUnitPrice\":\"The estimated current gas price in wei of the destination chain\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"estimateGasFee(uint256,bytes)\":{\"notice\":\"Returns srcGasToken fee to charge in wei for the cross-chain message based on the gas limit\"},\"setCostPerChain(uint256,uint256,uint256)\":{\"notice\":\"Permissioned method to allow an off-chain party to set what each dstChain's gas cost is priced in the srcChain's native gas currency. Example: call on ETH, setCostPerChain(43114, 30000000000, 25180000000000000) chain ID 43114 Average of 30 gwei cost to transaction on 43114 AVAX/ETH = 0.02518, scaled to gas in wei = 25180000000000000\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/GasFeePricing.sol\":\"GasFeePricing\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-4.5.0/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-4.5.0/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/messaging/GasFeePricing.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts-4.5.0/access/Ownable.sol\\\";\\n\\ncontract GasFeePricing is Ownable {\\n    // DstChainId => The estimated current gas price in wei of the destination chain\\n    mapping(uint256 => uint256) public dstGasPriceInWei;\\n    // DstChainId => USD gas ratio of dstGasToken / srcGasToken\\n    mapping(uint256 => uint256) public dstGasTokenRatio;\\n\\n    constructor() {}\\n\\n    /**\\n     * @notice Permissioned method to allow an off-chain party to set what each dstChain's\\n     * gas cost is priced in the srcChain's native gas currency.\\n     * Example: call on ETH, setCostPerChain(43114, 30000000000, 25180000000000000)\\n     * chain ID 43114\\n     * Average of 30 gwei cost to transaction on 43114\\n     * AVAX/ETH = 0.02518, scaled to gas in wei = 25180000000000000\\n     * @param _dstChainId The destination chain ID - typically, standard EVM chain ID, but differs on nonEVM chains\\n     * @param _gasUnitPrice The estimated current gas price in wei of the destination chain\\n     * @param _gasTokenPriceRatio USD gas ratio of dstGasToken / srcGasToken\\n     */\\n    function setCostPerChain(\\n        uint256 _dstChainId,\\n        uint256 _gasUnitPrice,\\n        uint256 _gasTokenPriceRatio\\n    ) external onlyOwner {\\n        dstGasPriceInWei[_dstChainId] = _gasUnitPrice;\\n        dstGasTokenRatio[_dstChainId] = _gasTokenPriceRatio;\\n    }\\n\\n    /**\\n     * @notice Returns srcGasToken fee to charge in wei for the cross-chain message based on the gas limit\\n     * @param _options Versioned struct used to instruct relayer on how to proceed with gas limits. Contains data on gas limit to submit tx with.\\n     */\\n    function estimateGasFee(uint256 _dstChainId, bytes memory _options)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        uint256 gasLimit;\\n        // temporary gas limit set\\n        if (_options.length != 0) {\\n            (\\n                uint16 _txType,\\n                uint256 _gasLimit,\\n                uint256 _dstAirdrop,\\n                bytes32 _dstAddress\\n            ) = decodeOptions(_options);\\n            gasLimit = _gasLimit;\\n        } else {\\n            gasLimit = 200000;\\n        }\\n\\n        uint256 minFee = ((dstGasPriceInWei[_dstChainId] *\\n            dstGasTokenRatio[_dstChainId] *\\n            gasLimit) / 10**18);\\n\\n        return minFee;\\n    }\\n\\n    function encodeOptions(uint16 txType, uint256 gasLimit)\\n        public\\n        pure\\n        returns (bytes memory)\\n    {\\n        return abi.encodePacked(txType, gasLimit);\\n    }\\n\\n    function encodeOptions(\\n        uint16 txType,\\n        uint256 gasLimit,\\n        uint256 dstNativeAmt,\\n        bytes32 dstAddress\\n    ) public pure returns (bytes memory) {\\n        return abi.encodePacked(txType, gasLimit, dstNativeAmt, dstAddress);\\n    }\\n\\n    function decodeOptions(bytes memory _options)\\n        public\\n        pure\\n        returns (\\n            uint16,\\n            uint256,\\n            uint256,\\n            bytes32\\n        )\\n    {\\n        // decoding the _options - reverts if type 2 and there is no dstNativeAddress\\n        require(\\n            _options.length == 34 || _options.length > 66,\\n            \\\"Wrong _adapterParameters size\\\"\\n        );\\n        uint16 txType;\\n        uint256 gasLimit;\\n        uint256 dstNativeAmt;\\n        bytes32 dstNativeAddress;\\n        assembly {\\n            txType := mload(add(_options, 2))\\n            gasLimit := mload(add(_options, 34))\\n        }\\n\\n        if (txType == 2) {\\n            assembly {\\n                dstNativeAmt := mload(add(_options, 66))\\n                dstNativeAddress := mload(add(_options, 98))\\n            }\\n            require(dstNativeAmt != 0, \\\"dstNativeAmt empty\\\");\\n            require(dstNativeAddress != bytes32(0), \\\"dstNativeAddress empty\\\");\\n        }\\n\\n        return (txType, gasLimit, dstNativeAmt, dstNativeAddress);\\n    }\\n}\\n\",\"keccak256\":\"0xf3c41963d42e7873545af391c9bdfcee5d59b651bde51cf6e8a08e120b2449af\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6111ae8061010d6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063d5e788a011610066578063d5e788a01461015b578063e0e162a51461018e578063e32192b7146101be578063f2fde38b146101da578063f7b9872a146101f65761009e565b806347feadc1146100a357806368e0a685146100d3578063715018a6146101035780638da5cb5b1461010d578063957976581461012b575b600080fd5b6100bd60048036038101906100b89190610922565b610226565b6040516100ca919061098d565b60405180910390f35b6100ed60048036038101906100e891906109a8565b6102bb565b6040516100fa919061098d565b60405180910390f35b61010b6102d3565b005b61011561035b565b6040516101229190610a16565b60405180910390f35b61014560048036038101906101409190610a6b565b610384565b6040516101529190610b33565b60405180910390f35b61017560048036038101906101709190610b55565b6103b0565b6040516101859493929190610bc6565b60405180910390f35b6101a860048036038101906101a39190610c37565b6104d4565b6040516101b59190610b33565b60405180910390f35b6101d860048036038101906101d39190610c9e565b610506565b005b6101f460048036038101906101ef9190610d1d565b6105b7565b005b610210600480360381019061020b91906109a8565b6106ae565b60405161021d919061098d565b60405180910390f35b600080600083511461025557600080600080610241876103b0565b93509350935093508294505050505061025c565b62030d4090505b6000670de0b6b3a7640000826002600088815260200190815260200160002054600160008981526020019081526020016000205461029a9190610d79565b6102a49190610d79565b6102ae9190610e02565b9050809250505092915050565b60016020528060005260406000206000915090505481565b6102db6106c6565b73ffffffffffffffffffffffffffffffffffffffff166102f961035b565b73ffffffffffffffffffffffffffffffffffffffff161461034f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034690610e90565b60405180910390fd5b61035960006106ce565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60608282604051602001610399929190610f07565b604051602081830303815290604052905092915050565b6000806000806022855114806103c7575060428551115b610406576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fd90610f7f565b60405180910390fd5b600080600080600289015193506022890151925060028461ffff16036104bd57604289015191506062890151905060008203610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046e90610feb565b60405180910390fd5b6000801b81036104bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b390611057565b60405180910390fd5b5b838383839750975097509750505050509193509193565b6060848484846040516020016104ed9493929190611098565b6040516020818303038152906040529050949350505050565b61050e6106c6565b73ffffffffffffffffffffffffffffffffffffffff1661052c61035b565b73ffffffffffffffffffffffffffffffffffffffff1614610582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057990610e90565b60405180910390fd5b816001600085815260200190815260200160002081905550806002600085815260200190815260200160002081905550505050565b6105bf6106c6565b73ffffffffffffffffffffffffffffffffffffffff166105dd61035b565b73ffffffffffffffffffffffffffffffffffffffff1614610633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062a90610e90565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069990611158565b60405180910390fd5b6106ab816106ce565b50565b60026020528060005260406000206000915090505481565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6107b9816107a6565b81146107c457600080fd5b50565b6000813590506107d6816107b0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61082f826107e6565b810181811067ffffffffffffffff8211171561084e5761084d6107f7565b5b80604052505050565b6000610861610792565b905061086d8282610826565b919050565b600067ffffffffffffffff82111561088d5761088c6107f7565b5b610896826107e6565b9050602081019050919050565b82818337600083830152505050565b60006108c56108c084610872565b610857565b9050828152602081018484840111156108e1576108e06107e1565b5b6108ec8482856108a3565b509392505050565b600082601f830112610909576109086107dc565b5b81356109198482602086016108b2565b91505092915050565b600080604083850312156109395761093861079c565b5b6000610947858286016107c7565b925050602083013567ffffffffffffffff811115610968576109676107a1565b5b610974858286016108f4565b9150509250929050565b610987816107a6565b82525050565b60006020820190506109a2600083018461097e565b92915050565b6000602082840312156109be576109bd61079c565b5b60006109cc848285016107c7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a00826109d5565b9050919050565b610a10816109f5565b82525050565b6000602082019050610a2b6000830184610a07565b92915050565b600061ffff82169050919050565b610a4881610a31565b8114610a5357600080fd5b50565b600081359050610a6581610a3f565b92915050565b60008060408385031215610a8257610a8161079c565b5b6000610a9085828601610a56565b9250506020610aa1858286016107c7565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ae5578082015181840152602081019050610aca565b83811115610af4576000848401525b50505050565b6000610b0582610aab565b610b0f8185610ab6565b9350610b1f818560208601610ac7565b610b28816107e6565b840191505092915050565b60006020820190508181036000830152610b4d8184610afa565b905092915050565b600060208284031215610b6b57610b6a61079c565b5b600082013567ffffffffffffffff811115610b8957610b886107a1565b5b610b95848285016108f4565b91505092915050565b610ba781610a31565b82525050565b6000819050919050565b610bc081610bad565b82525050565b6000608082019050610bdb6000830187610b9e565b610be8602083018661097e565b610bf5604083018561097e565b610c026060830184610bb7565b95945050505050565b610c1481610bad565b8114610c1f57600080fd5b50565b600081359050610c3181610c0b565b92915050565b60008060008060808587031215610c5157610c5061079c565b5b6000610c5f87828801610a56565b9450506020610c70878288016107c7565b9350506040610c81878288016107c7565b9250506060610c9287828801610c22565b91505092959194509250565b600080600060608486031215610cb757610cb661079c565b5b6000610cc5868287016107c7565b9350506020610cd6868287016107c7565b9250506040610ce7868287016107c7565b9150509250925092565b610cfa816109f5565b8114610d0557600080fd5b50565b600081359050610d1781610cf1565b92915050565b600060208284031215610d3357610d3261079c565b5b6000610d4184828501610d08565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d84826107a6565b9150610d8f836107a6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dc857610dc7610d4a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e0d826107a6565b9150610e18836107a6565b925082610e2857610e27610dd3565b5b828204905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e7a602083610e33565b9150610e8582610e44565b602082019050919050565b60006020820190508181036000830152610ea981610e6d565b9050919050565b60008160f01b9050919050565b6000610ec882610eb0565b9050919050565b610ee0610edb82610a31565b610ebd565b82525050565b6000819050919050565b610f01610efc826107a6565b610ee6565b82525050565b6000610f138285610ecf565b600282019150610f238284610ef0565b6020820191508190509392505050565b7f57726f6e67205f61646170746572506172616d65746572732073697a65000000600082015250565b6000610f69601d83610e33565b9150610f7482610f33565b602082019050919050565b60006020820190508181036000830152610f9881610f5c565b9050919050565b7f6473744e6174697665416d7420656d7074790000000000000000000000000000600082015250565b6000610fd5601283610e33565b9150610fe082610f9f565b602082019050919050565b6000602082019050818103600083015261100481610fc8565b9050919050565b7f6473744e61746976654164647265737320656d70747900000000000000000000600082015250565b6000611041601683610e33565b915061104c8261100b565b602082019050919050565b6000602082019050818103600083015261107081611034565b9050919050565b6000819050919050565b61109261108d82610bad565b611077565b82525050565b60006110a48287610ecf565b6002820191506110b48286610ef0565b6020820191506110c48285610ef0565b6020820191506110d48284611081565b60208201915081905095945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611142602683610e33565b915061114d826110e6565b604082019050919050565b6000602082019050818103600083015261117181611135565b905091905056fea26469706673582212207d8cc142728f401457becdc210bc808b2b8d4bac43e1d26e4db756b95765356064736f6c634300080d0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "estimateGasFee(uint256,bytes)": {
        "params": {
          "_options": "Versioned struct used to instruct relayer on how to proceed with gas limits. Contains data on gas limit to submit tx with."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setCostPerChain(uint256,uint256,uint256)": {
        "params": {
          "_dstChainId": "The destination chain ID - typically, standard EVM chain ID, but differs on nonEVM chains",
          "_gasTokenPriceRatio": "USD gas ratio of dstGasToken / srcGasToken",
          "_gasUnitPrice": "The estimated current gas price in wei of the destination chain"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "estimateGasFee(uint256,bytes)": {
        "notice": "Returns srcGasToken fee to charge in wei for the cross-chain message based on the gas limit"
      },
      "setCostPerChain(uint256,uint256,uint256)": {
        "notice": "Permissioned method to allow an off-chain party to set what each dstChain's gas cost is priced in the srcChain's native gas currency. Example: call on ETH, setCostPerChain(43114, 30000000000, 25180000000000000) chain ID 43114 Average of 30 gwei cost to transaction on 43114 AVAX/ETH = 0.02518, scaled to gas in wei = 25180000000000000"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/messaging/GasFeePricing.sol:GasFeePricing",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 135,
        "contract": "contracts/messaging/GasFeePricing.sol:GasFeePricing",
        "label": "dstGasPriceInWei",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 139,
        "contract": "contracts/messaging/GasFeePricing.sol:GasFeePricing",
        "label": "dstGasTokenRatio",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}