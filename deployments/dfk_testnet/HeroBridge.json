{
  "address": "0xDE03e73c3785cE086ca85C6315Df376A4A64C84b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageBus",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_heroes",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_assistingAuction",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "heroId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "arrivalChainId",
          "type": "uint256"
        }
      ],
      "name": "HeroArrived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_srcChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_srcAddress",
          "type": "bytes32"
        }
      ],
      "name": "SetTrustedRemote",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "assistingAuction",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_srcAddress",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_srcChainId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "name": "executeMessage",
      "outputs": [
        {
          "internalType": "enum ISynMessagingReceiver.MsgExecutionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        }
      ],
      "name": "getTrustedRemote",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "trustedRemote",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "heroes",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageBus",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "msgGasLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_heroId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dstChainId",
          "type": "uint256"
        }
      ],
      "name": "sendHero",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assistingAuction",
          "type": "address"
        }
      ],
      "name": "setAssistingAuctionAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageBus",
          "type": "address"
        }
      ],
      "name": "setMessageBus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_msgGasLimit",
          "type": "uint256"
        }
      ],
      "name": "setMsgGasLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_srcChainId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_srcAddress",
          "type": "bytes32"
        }
      ],
      "name": "setTrustedRemote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x279e941ed5b8d371b20cc77225dc334728d45e518e883bb8dcae3f246cbb8c41",
  "receipt": {
    "to": null,
    "from": "0x235AF07E770f474d24F5bf73074735892371b40D",
    "contractAddress": "0xDE03e73c3785cE086ca85C6315Df376A4A64C84b",
    "transactionIndex": 0,
    "gasUsed": "2131342",
    "logsBloom": "0x
    "blockHash": "0x04c543cc2c60cb9a841737250723945d40c5bda18c4e7f4f44cb143462ba590f",
    "transactionHash": "0x279e941ed5b8d371b20cc77225dc334728d45e518e883bb8dcae3f246cbb8c41",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6951,
        "transactionHash": "0x279e941ed5b8d371b20cc77225dc334728d45e518e883bb8dcae3f246cbb8c41",
        "address": "0xDE03e73c3785cE086ca85C6315Df376A4A64C84b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000235af07e770f474d24f5bf73074735892371b40d"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x04c543cc2c60cb9a841737250723945d40c5bda18c4e7f4f44cb143462ba590f"
      }
    ],
    "blockNumber": 6951,
    "cumulativeGasUsed": "2131342",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x57562B26C7B35053e2AdDd54888a6B571c04d3df",
    "0x3bcaCBeAFefed260d877dbE36378008D4e714c8E",
    "0x846635615609a8dd88eA4A92dA1F1Ba6880a9Eb5"
  ],
  "solcInputHash": "71ba1e6760a34ea5660996bd9833a737",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageBus\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_heroes\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_assistingAuction\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"heroId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"arrivalChainId\",\"type\":\"uint256\"}],\"name\":\"HeroArrived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_srcChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_srcAddress\",\"type\":\"bytes32\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"assistingAuction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_srcAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_srcChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"name\":\"executeMessage\",\"outputs\":[{\"internalType\":\"enum ISynMessagingReceiver.MsgExecutionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"}],\"name\":\"getTrustedRemote\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"trustedRemote\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"heroes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageBus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"msgGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_heroId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstChainId\",\"type\":\"uint256\"}],\"name\":\"sendHero\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assistingAuction\",\"type\":\"address\"}],\"name\":\"setAssistingAuctionAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageBus\",\"type\":\"address\"}],\"name\":\"setMessageBus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_msgGasLimit\",\"type\":\"uint256\"}],\"name\":\"setMsgGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_srcChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_srcAddress\",\"type\":\"bytes32\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeMessage(bytes32,uint256,bytes,address)\":{\"details\":\"Must be called by MessageBug & sent from src chain by a trusted srcApp\",\"params\":{\"_executor\":\"Address who called the MessageBus execution function\",\"_message\":\"Arbitrary message bytes originated from and encoded by the source app contract\",\"_srcAddress\":\"The bytes32 address of the source app contract\",\"_srcChainId\":\"The source chain ID where the transfer is originated from\"},\"returns\":{\"_0\":\"status Enum containing options of Success, Fail, Retry\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"sendHero(uint256,uint256)\":{\"details\":\"This function enforces the caller to receive the Hero being bridged to the same address on another chain.Do NOT call this from other contracts, unless the contract is deployed on another chain to the same address, and can receive ERC721s. \",\"params\":{\"_dstChainId\":\"The destination chain ID - typically, standard EVM chain ID, but differs on nonEVM chains\",\"_heroId\":\"specifics which hero msg.sender already holds and will transfer to the bridge contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Core app for handling cross chain messaging passing to bridge Hero NFTs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeMessage(bytes32,uint256,bytes,address)\":{\"notice\":\"Executes a message called by MessageBus (MessageBusReceiver)\"},\"sendHero(uint256,uint256)\":{\"notice\":\"User must have an existing hero minted to bridge it.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/dfk/bridge/HeroBridge.sol\":\"HeroBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-4.5.0/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-4.5.0/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/messaging/dfk/IAssistingAuctionUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IAssistingAuction {\\n    function bid(uint256 _tokenId, uint256 _bidAmount) external;\\n\\n    function bidFor(\\n        address _bidder,\\n        uint256 _tokenId,\\n        uint256 _bidAmount\\n    ) external;\\n\\n    function cancelAuction(uint256 _tokenId) external;\\n\\n    function cancelAuctionWhenPaused(uint256 _tokenId) external;\\n\\n    function isOnAuction(uint256 _tokenId) external returns (bool);\\n\\n    function createAuction(\\n        uint256 _tokenId,\\n        uint256 _startingPrice,\\n        uint256 _endingPrice,\\n        uint256 _duration\\n    ) external;\\n\\n    function getAuction(uint256 _tokenId)\\n        external\\n        view\\n        returns (\\n            address seller,\\n            uint256 startingPrice,\\n            uint256 endingPrice,\\n            uint256 duration,\\n            uint256 startedAt\\n        );\\n\\n    function getCurrentPrice(uint256 _tokenId) external view returns (uint256);\\n\\n    function heroCore() external view returns (address);\\n\\n    function jewelToken() external view returns (address);\\n\\n    function owner() external view returns (address);\\n\\n    function ownerCut() external view returns (uint256);\\n\\n    function paused() external view returns (bool);\\n\\n    function renounceOwnership() external;\\n\\n    function setFees(address[] memory _feeAddresses, uint256[] memory _feePercents) external;\\n\\n    function transferOwnership(address newOwner) external;\\n}\\n\",\"keccak256\":\"0x411bd47f073099bc4841dbd85220debcae8fcdfa66b017a01ffe2280c0508615\",\"license\":\"MIT\"},\"contracts/messaging/dfk/IHeroCoreUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport {Hero, HeroInfo, HeroState, SummoningInfo, HeroProfessions, Rarity} from \\\"./types/HeroTypes.sol\\\";\\nimport {HeroCrystal} from \\\"./types/CrystalTypes.sol\\\";\\n\\ninterface IHeroCoreUpgradeable {\\n    function bridgeMint(uint256 _id, address _to) external;\\n    \\n    function DEFAULT_ADMIN_ROLE() external view returns (bytes32);\\n\\n    function MINTER_ROLE() external view returns (bytes32);\\n\\n    function MODERATOR_ROLE() external view returns (bytes32);\\n\\n    function PAUSER_ROLE() external view returns (bytes32);\\n\\n    function STAMINA_ROLE() external view returns (bytes32);\\n\\n    function HERO_MODERATOR_ROLE() external view returns (bytes32);\\n\\n    function updateHero(Hero memory _hero) external;\\n\\n    function approve(address to, uint256 tokenId) external;\\n\\n    function assistingAuction() external view returns (address);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function baseCooldown() external view returns (uint256);\\n\\n    function baseSummonFee() external view returns (uint256);\\n\\n    function burn(uint256 tokenId) external;\\n\\n    function calculateSummoningCost(uint256 _heroId) external view returns (uint256);\\n\\n    function cooldownPerGen() external view returns (uint256);\\n\\n    function cooldownPerSummon() external view returns (uint256);\\n\\n    function cooldowns(uint256) external view returns (uint32);\\n\\n    function createAssistingAuction(\\n        uint256 _heroId,\\n        uint256 _startingPrice,\\n        uint256 _endingPrice,\\n        uint256 _duration\\n    ) external;\\n\\n    function createHero(\\n        uint256 _statGenes,\\n        uint256 _visualGenes,\\n        Rarity _rarity,\\n        bool _shiny,\\n        HeroCrystal memory _crystal,\\n        uint256 _crystalId\\n    ) external returns (uint256);\\n\\n    function createSaleAuction(\\n        uint256 _heroId,\\n        uint256 _startingPrice,\\n        uint256 _endingPrice,\\n        uint256 _duration\\n    ) external;\\n\\n    function deductStamina(uint256 _heroId, uint256 _staminaDeduction) external;\\n\\n    function extractNumber(\\n        uint256 randomNumber,\\n        uint256 digits,\\n        uint256 offset\\n    ) external pure returns (uint256 result);\\n\\n    function geneScience() external view returns (address);\\n\\n    function getApproved(uint256 tokenId) external view returns (address);\\n\\n    function getCurrentStamina(uint256 _heroId) external view returns (uint256);\\n\\n    function getHero(uint256 _id) external view returns (Hero memory);\\n\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\\n\\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\\n\\n    function grantRole(bytes32 role, address account) external;\\n\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    function increasePerGen() external view returns (uint256);\\n\\n    function increasePerSummon() external view returns (uint256);\\n\\n    function initialize(\\n        string memory name,\\n        string memory symbol,\\n        string memory baseTokenURI\\n    ) external;\\n\\n    function initialize(address _crystalAddress) external;\\n\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    function isReadyToSummon(uint256 _heroId) external view returns (bool);\\n\\n    function crystalToken() external view returns (address);\\n\\n    function mint(address to) external;\\n\\n    function name() external view returns (string memory);\\n\\n    function openCrystal(uint256 _crystalId) external returns (uint256);\\n\\n    function ownerOf(uint256 tokenId) external view returns (address);\\n\\n    function pause() external;\\n\\n    function paused() external view returns (bool);\\n\\n    function renounceRole(bytes32 role, address account) external;\\n\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) external;\\n\\n    function saleAuction() external view returns (address);\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    function setAssistingAuctionAddress(address _address) external;\\n\\n    function setFees(address[] memory _feeAddresses, uint256[] memory _feePercents) external;\\n\\n    function setSaleAuctionAddress(address _address) external;\\n\\n    function setSummonCooldowns(\\n        uint256 _baseCooldown,\\n        uint256 _cooldownPerSummon,\\n        uint256 _cooldownPerGen\\n    ) external;\\n\\n    function setSummonFees(\\n        uint256 _baseSummonFee,\\n        uint256 _increasePerSummon,\\n        uint256 _increasePerGen\\n    ) external;\\n\\n    function setTimePerStamina(uint256 _timePerStamina) external;\\n\\n    function summonCrystal(\\n        uint256 _summonerId,\\n        uint256 _assistantId,\\n        uint8 _summonerTears,\\n        uint8 _assistantTears,\\n        address _enhancementStone\\n    ) external;\\n\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function timePerStamina() external view returns (uint256);\\n\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    function unpause() external;\\n\\n    function vrf(uint256 blockNumber) external view returns (bytes32 result);\\n}\\n\",\"keccak256\":\"0x1fa1ce29b0ba6a13d6b0048a758e064c4a24012f6016bf05ec0fb4fce20129c4\",\"license\":\"MIT\"},\"contracts/messaging/dfk/bridge/HeroBridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport \\\"../../framework/SynMessagingReceiver.sol\\\";\\nimport \\\"../IHeroCoreUpgradeable.sol\\\";\\nimport \\\"../IAssistingAuctionUpgradeable.sol\\\";\\nimport {HeroStatus} from \\\"../types/HeroTypes.sol\\\";\\n\\npragma solidity 0.8.13;\\n\\n/** @title Core app for handling cross chain messaging passing to bridge Hero NFTs\\n */\\n\\ncontract HeroBridge is SynMessagingReceiver {\\n    address public immutable heroes;\\n    address public assistingAuction;\\n    uint256 public msgGasLimit;\\n\\n    struct MessageFormat {\\n        Hero dstHero;\\n        address dstUser;\\n        uint256 dstHeroId;\\n    }\\n\\n    constructor(\\n        address _messageBus,\\n        address _heroes,\\n        address _assistingAuction\\n    ) {\\n        messageBus = _messageBus;\\n        heroes = _heroes;\\n        assistingAuction = _assistingAuction;\\n    }\\n\\n\\n    event HeroArrived(uint256 heroId, uint256 arrivalChainId);\\n\\n    function _createMessage(\\n        uint256 _heroId,\\n        address _dstUserAddress,\\n        Hero memory _heroToBridge\\n    ) internal pure returns (bytes memory) {\\n        // create the message here from the nested struct\\n        MessageFormat memory msgFormat = MessageFormat({\\n            dstHeroId: _heroId,\\n            dstHero: _heroToBridge,\\n            dstUser: _dstUserAddress\\n        });\\n        return abi.encode(msgFormat);\\n    }\\n\\n    function _decodeMessage(bytes memory _message)\\n        internal\\n        pure\\n        returns (MessageFormat memory)\\n    {\\n        MessageFormat memory decodedMessage = abi.decode(\\n            _message,\\n            (MessageFormat)\\n        );\\n        return decodedMessage;\\n    }\\n\\n    function _createOptions() internal view returns (bytes memory) {\\n        return abi.encodePacked(uint16(1), msgGasLimit);\\n    }\\n\\n    /**\\n     * @notice User must have an existing hero minted to bridge it.\\n     * @dev This function enforces the caller to receive the Hero being bridged to the same address on another chain.\\n     * @dev Do NOT call this from other contracts, unless the contract is deployed on another chain to the same address, \\n     * @dev and can receive ERC721s. \\n     * @param _heroId specifics which hero msg.sender already holds and will transfer to the bridge contract\\n     * @param _dstChainId The destination chain ID - typically, standard EVM chain ID, but differs on nonEVM chains\\n     */\\n    function sendHero(uint256 _heroId, uint256 _dstChainId) external payable {\\n        Hero memory heroToBridge = IHeroCoreUpgradeable(heroes).getHero(\\n            _heroId\\n        );\\n        // revert if the hero is on a quest\\n        require(\\n            heroToBridge.state.currentQuest == address(0),\\n            \\\"hero is questing\\\"\\n        );\\n\\n        // revert if the hero is on auction\\n        require(\\n            (IAssistingAuction(assistingAuction).isOnAuction(_heroId)) == false,\\n            \\\"assisting auction\\\"\\n        );\\n\\n        bytes32 receiver = trustedRemoteLookup[_dstChainId];\\n        // _createMessage(heroId, dstUserAddress, Hero);\\n        // Only bridgeable directly to the caller of this contract\\n        // @dev do not call this function from other contracts\\n        bytes memory msgToPass = _createMessage(\\n            _heroId,\\n            msg.sender,\\n            heroToBridge\\n        );\\n        // Create _options\\n        bytes memory options = _createOptions();\\n\\n        IHeroCoreUpgradeable(heroes).transferFrom(\\n            msg.sender,\\n            address(this),\\n            _heroId\\n        );\\n        require(IHeroCoreUpgradeable(heroes).ownerOf(_heroId) == address(this), \\\"Failed to lock Hero\\\");\\n        // Hero now locked, message can be safely emitted\\n\\n        _send(receiver, _dstChainId, msgToPass, options);\\n    }\\n\\n    // Function called by executeMessage() - handleMessage will handle the hero bridge mint\\n    // executeMessage() handles permissioning checks\\n    function _handleMessage(\\n        bytes32,\\n        uint256,\\n        bytes memory _message,\\n        address\\n    ) internal override returns (MsgExecutionStatus) {\\n        // Decode _message, depending on exactly how the originating message is structured\\n        /** \\n            Message data: \\n                Hero memory heroToBridge = IHeroCoreUpgradeable(heroes).getHero(_heroId);\\n                address dstUserAddress = msg.sender;\\n                uint256 dstHeroId = _heroId;\\n             */\\n        MessageFormat memory passedMsg = _decodeMessage(_message);\\n\\n        Hero memory dstHero = passedMsg.dstHero;\\n        address dstUser = passedMsg.dstUser;\\n        uint256 dstHeroId = passedMsg.dstHeroId;\\n\\n        // will revert if non-existant Hero\\n        try IHeroCoreUpgradeable(heroes).ownerOf(dstHeroId) returns (\\n            address heroOwner\\n        ) {\\n            /** \\n                If heroId does exist (which means it should be locked on this contract), as it was bridged before.\\n                Transfer it to message.dstUserAddress\\n                */\\n\\n            if (heroOwner == address(this)) {\\n                IHeroCoreUpgradeable(heroes).safeTransferFrom(\\n                    address(this),\\n                    dstUser,\\n                    dstHeroId\\n                );\\n            }\\n        } catch {\\n            /** \\n                If hero ID doesn't exist: \\n                Mint a hero to msg.dstUserAddress\\n                */\\n            IHeroCoreUpgradeable(heroes).bridgeMint(dstHeroId, dstUser);\\n        }\\n\\n        // update the hero attributes based on the attributes in the message (Assumes the message has more recent attributes)\\n        IHeroCoreUpgradeable(heroes).updateHero(dstHero);\\n        // Tx completed, return Success\\n        emit HeroArrived(dstHeroId, block.chainid);\\n        return MsgExecutionStatus.Success;\\n    }\\n\\n    function _send(\\n        bytes32 _receiver,\\n        uint256 _dstChainId,\\n        bytes memory _message,\\n        bytes memory _options\\n    ) internal override {\\n        bytes32 trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote != bytes32(0), \\\"No remote app set for dst chain\\\");\\n        require(trustedRemote == _receiver, \\\"Receiver is not in trusted remote apps\\\");\\n        IMessageBus(messageBus).sendMessage{value: msg.value}(\\n            _receiver,\\n            _dstChainId,\\n            _message,\\n            _options\\n        );\\n    }\\n\\n    function setAssistingAuctionAddress(address _assistingAuction) external onlyOwner {\\n        assistingAuction = _assistingAuction;\\n    }\\n\\n    function setMsgGasLimit(uint256 _msgGasLimit) external onlyOwner {\\n        msgGasLimit = _msgGasLimit;\\n    }\\n}\\n\",\"keccak256\":\"0x98d4032a7e2ac00f4a987407082bf7b621372d97076bfabd841b3b4d7a2d4eeb\",\"license\":\"MIT\"},\"contracts/messaging/dfk/types/CrystalTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nstruct HeroCrystal {\\n    address owner;\\n    uint256 summonerId;\\n    uint256 assistantId;\\n    uint16 generation;\\n    uint256 createdBlock;\\n    uint256 heroId;\\n    uint8 summonerTears;\\n    uint8 assistantTears;\\n    address enhancementStone;\\n    uint32 maxSummons;\\n    uint32 firstName;\\n    uint32 lastName;\\n    uint8 shinyStyle;\\n}\\n\",\"keccak256\":\"0x124a20e57851ccef014836b8a41d3604be0cfb060587d48036fccac6af4a9eb0\",\"license\":\"MIT\"},\"contracts/messaging/dfk/types/HeroTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.6;\\n\\nenum HeroStatus {\\n    OK,\\n    KO\\n}\\n\\nenum Rarity {\\n    COMMON,\\n    UNCOMMON,\\n    RARE,\\n    LEGENDARY,\\n    MYTHIC\\n}\\n\\nstruct HeroStats {\\n    uint16 strength;\\n    uint16 agility;\\n    uint16 intelligence;\\n    uint16 wisdom;\\n    uint16 luck;\\n    uint16 vitality;\\n    uint16 endurance;\\n    uint16 dexterity;\\n    uint16 hp;\\n    uint16 mp;\\n    uint16 stamina;\\n}\\n\\nstruct HeroStatGrowth {\\n    uint16 strength;\\n    uint16 agility;\\n    uint16 intelligence;\\n    uint16 wisdom;\\n    uint16 luck;\\n    uint16 vitality;\\n    uint16 endurance;\\n    uint16 dexterity;\\n    uint16 hpSm;\\n    uint16 hpRg;\\n    uint16 hpLg;\\n    uint16 mpSm;\\n    uint16 mpRg;\\n    uint16 mpLg;\\n}\\n\\nstruct SummoningInfo {\\n    uint256 summonedTime;\\n    // How long until the hero can participate in summoning again.\\n    uint256 nextSummonTime;\\n    uint256 summonerId;\\n    uint256 assistantId;\\n    // How many summons the hero has done.\\n    uint32 summons;\\n    // How many summons can the hero do max.\\n    uint32 maxSummons;\\n}\\n\\nstruct HeroInfo {\\n    uint256 statGenes;\\n    uint256 visualGenes;\\n    Rarity rarity;\\n    bool shiny;\\n    uint16 generation;\\n    uint32 firstName;\\n    uint32 lastName;\\n    uint8 shinyStyle;\\n    uint8 class;\\n    uint8 subClass;\\n}\\n\\nstruct HeroState {\\n    // The time the hero's stamina is full at.\\n    uint256 staminaFullAt;\\n    // The time the hero's hp is full at.\\n    uint256 hpFullAt;\\n    // The time the hero's mp is full at.\\n    uint256 mpFullAt;\\n    // The current level of the hero.\\n    uint16 level;\\n    // The current XP the hero has towards their next level.\\n    uint64 xp;\\n    // The current quest a hero is undertaking, if any.\\n    address currentQuest;\\n    // The skill points the hero can spend.\\n    uint8 sp;\\n    HeroStatus status;\\n}\\n\\nstruct HeroProfessions {\\n    uint16 mining;\\n    uint16 gardening;\\n    uint16 foraging;\\n    uint16 fishing;\\n}\\n\\n/// @dev The main Hero struct.\\nstruct Hero {\\n    uint256 id;\\n    SummoningInfo summoningInfo;\\n    HeroInfo info;\\n    HeroState state;\\n    HeroStats stats;\\n    HeroStatGrowth primaryStatGrowth;\\n    HeroStatGrowth secondaryStatGrowth;\\n    HeroProfessions professions;\\n}\\n\\n\",\"keccak256\":\"0xd54451a95e04cf32050154b9bc9d22f3a0b173281f5ec5642efc000ac85dfa03\",\"license\":\"MIT\"},\"contracts/messaging/framework/SynMessagingReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"../interfaces/ISynMessagingReceiver.sol\\\";\\nimport \\\"../interfaces/IMessageBus.sol\\\";\\nimport \\\"@openzeppelin/contracts-4.5.0/access/Ownable.sol\\\";\\n\\nabstract contract SynMessagingReceiver is ISynMessagingReceiver, Ownable {\\n    \\n    address public messageBus;\\n\\n    // Maps chain ID to the bytes32 trusted addresses allowed to be source senders\\n    mapping(uint256 => bytes32) internal trustedRemoteLookup;\\n\\n    event SetTrustedRemote(uint256 _srcChainId, bytes32 _srcAddress);\\n\\n\\n    /**\\n     * @notice Executes a message called by MessageBus (MessageBusReceiver)\\n     * @dev Must be called by MessageBug & sent from src chain by a trusted srcApp\\n     * @param _srcAddress The bytes32 address of the source app contract\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     * @return status Enum containing options of Success, Fail, Retry\\n     */\\n    function executeMessage(\\n        bytes32 _srcAddress,\\n        uint256 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external returns (MsgExecutionStatus) {\\n        // Must be called by the MessageBus/MessageBus for security\\n        require(msg.sender == messageBus, \\\"caller is not message bus\\\");\\n        // Must also be from a trusted source app\\n        require(_srcAddress == trustedRemoteLookup[_srcChainId], \\\"Invalid source sending app\\\");\\n\\n        return _handleMessage(_srcAddress, _srcChainId, _message, _executor);\\n    }\\n\\n    // Logic here handling messsage contents\\n    function _handleMessage(bytes32 _srcAddress,\\n        uint256 _srcChainId,\\n        bytes memory _message,\\n        address _executor) internal virtual returns (MsgExecutionStatus);\\n\\n\\n    function _send(bytes32 _receiver,\\n        uint256 _dstChainId,\\n        bytes memory _message,\\n        bytes memory _options) internal virtual {\\n            require(trustedRemoteLookup[_dstChainId] != bytes32(0), \\\"Receiver not trusted remote\\\");\\n            IMessageBus(messageBus).sendMessage{value: msg.value}(_receiver, _dstChainId, _message, _options);\\n    }\\n\\n    //** Config Functions */\\n    function setMessageBus(address _messageBus) public onlyOwner {\\n        messageBus = _messageBus;\\n    }\\n\\n     // allow owner to set trusted addresses allowed to be source senders\\n    function setTrustedRemote(uint256 _srcChainId, bytes32 _srcAddress) external onlyOwner {\\n        trustedRemoteLookup[_srcChainId] = _srcAddress;\\n        emit SetTrustedRemote(_srcChainId, _srcAddress);\\n    }\\n\\n    //** View functions */\\n    function getTrustedRemote(uint256 _chainId) external view returns (bytes32 trustedRemote) {\\n        return trustedRemoteLookup[_chainId];\\n    }\\n\\n}\\n\",\"keccak256\":\"0xb8f58b0bd50d51c85178ab9d113d32ddb46c0b58ea0e5560c9af02d621ccc132\",\"license\":\"MIT\"},\"contracts/messaging/interfaces/IMessageBus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\ninterface IMessageBus {\\n    \\n    /**\\n     * @notice Sends a message to a receiving contract address on another chain. \\n     * Sender must make sure that the message is unique and not a duplicate message.\\n     * @param _receiver The bytes32 address of the destination contract to be called\\n     * @param _dstChainId The destination chain ID - typically, standard EVM chain ID, but differs on nonEVM chains\\n     * @param _message The arbitrary payload to pass to the destination chain receiver\\n     * @param _options Versioned struct used to instruct relayer on how to proceed with gas limits\\n     */\\n    function sendMessage(\\n        bytes32 _receiver,\\n        uint256 _dstChainId,\\n        bytes calldata _message,\\n        bytes calldata _options\\n    ) external payable;\\n\\n    /**\\n     * @notice Relayer executes messages through an authenticated method to the destination receiver\\n     based on the originating transaction on source chain\\n     * @param _srcChainId Originating chain ID - typically a standard EVM chain ID, but may refer to a Synapse-specific chain ID on nonEVM chains\\n     * @param _srcAddress Originating bytes address of the message sender on the srcChain\\n     * @param _dstAddress Destination address that the arbitrary message will be passed to\\n     * @param _gasLimit Gas limit to be passed alongside the message, depending on the fee paid on srcChain\\n     * @param _message Arbitrary message payload to pass to the destination chain receiver\\n     */\\n    function executeMessage(\\n        uint256 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint256 _gasLimit,\\n        uint256 _nonce,\\n        bytes calldata _message\\n    ) external;\\n\\n\\n    /**\\n     * @notice Returns srcGasToken fee to charge in wei for the cross-chain message based on the gas limit\\n     * @param _options Versioned struct used to instruct relayer on how to proceed with gas limits. Contains data on gas limit to submit tx with.\\n     */\\n    function estimateFee(uint256 _dstChainId, bytes calldata _options)\\n        external\\n        returns (uint256);\\n\\n    /**\\n     * @notice Withdraws message fee in the form of native gas token.\\n     * @param _account The address receiving the fee.\\n     */\\n    function withdrawFee(\\n        address _account\\n    ) external;\\n\\n\\n\\n}\\n\",\"keccak256\":\"0xcc13995e79a6f8928551bec0ff911b8d9de8ab71fbbb561d1b44e8d11fd1d2b2\",\"license\":\"MIT\"},\"contracts/messaging/interfaces/ISynMessagingReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface ISynMessagingReceiver {\\n\\n    // Maps chain ID to the bytes32 trusted addresses allowed to be source senders\\n    // mapping(uint256 => bytes32) internal trustedRemoteLookup;\\n\\n\\n    /** \\n     * @notice MsgExecutionStatus state\\n     * @return Success execution succeeded, finalized\\n     * @return Fail // execution failed, finalized\\n     * @return Retry // execution failed or rejected, set to be retryable\\n    */ \\n    enum MsgExecutionStatus {\\n        Success, \\n        Fail\\n    }\\n\\n     /**\\n     * @notice Called by MessageBus \\n     * @dev MUST be permissioned to trusted source apps via trustedRemote\\n     * @param _srcAddress The bytes32 address of the source app contract\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessage(\\n        bytes32 _srcAddress,\\n        uint256 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external returns (MsgExecutionStatus);\\n}\\n    \",\"keccak256\":\"0x9081c7651818c6d57dbbe3053422ca5789b7cee0d9a6d79c7a912fc02b30fd58\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620025ff380380620025ff8339810160408190526200003491620000e4565b6200003f3362000077565b600180546001600160a01b039485166001600160a01b031991821617909155918316608052600380549190931691161790556200012e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000df57600080fd5b919050565b600080600060608486031215620000fa57600080fd5b6200010584620000c7565b92506200011560208501620000c7565b91506200012560408501620000c7565b90509250925092565b6080516124846200017b600039600081816101090152818161033f015281816105f1015281816106a701528181611050015281816111360152818161120601526112a201526124846000f3fe6080604052600436106100dd5760003560e01c80638da5cb5b1161007f578063bd3583ae11610059578063bd3583ae14610297578063c0e07f28146102b7578063f2fde38b146102cd578063f9ecc6f5146102ed57600080fd5b80638da5cb5b14610212578063a1a227fa1461023d578063a60608711461026a57600080fd5b80635c9c7c73116100bb5780635c9c7c7314610175578063715018a6146101955780637246a948146101aa57806384a12b0f146101d757600080fd5b80631efedbe5146100e2578063230bb9f6146100f7578063547cad1214610155575b600080fd5b6100f56100f036600461161e565b61030d565b005b34801561010357600080fd5b5061012b7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561016157600080fd5b506100f5610170366004611662565b6107a4565b34801561018157600080fd5b506100f5610190366004611662565b61086c565b3480156101a157600080fd5b506100f5610934565b3480156101b657600080fd5b5060035461012b9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101e357600080fd5b506102046101f236600461167f565b60009081526002602052604090205490565b60405190815260200161014c565b34801561021e57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff1661012b565b34801561024957600080fd5b5060015461012b9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561027657600080fd5b5061028a610285366004611698565b6109c1565b60405161014c9190611772565b3480156102a357600080fd5b506100f56102b236600461161e565b610b09565b3480156102c357600080fd5b5061020460045481565b3480156102d957600080fd5b506100f56102e8366004611662565b610bd9565b3480156102f957600080fd5b506100f561030836600461167f565b610d09565b6040517f21d80111000000000000000000000000000000000000000000000000000000008152600481018390526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906321d801119060240161088060405180830381865afa15801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c09190611e53565b606081015160a0015190915073ffffffffffffffffffffffffffffffffffffffff161561044e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6865726f206973207175657374696e670000000000000000000000000000000060448201526064015b60405180910390fd5b6003546040517f37e246ad0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff909116906337e246ad906024016020604051808303816000875af11580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e39190611e70565b1561054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f617373697374696e672061756374696f6e0000000000000000000000000000006044820152606401610445565b60008281526002602052604081205490610565853385610d8f565b905060006105b3600454604080517e01000000000000000000000000000000000000000000000000000000000000602082015260228082019390935281518082039093018352604201905290565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd90606401600060405180830381600087803b15801561064a57600080fd5b505af115801561065e573d6000803e3d6000fd5b50506040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810189905230925073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169150636352211e90602401602060405180830381865afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107139190611e8b565b73ffffffffffffffffffffffffffffffffffffffff1614610790576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4661696c656420746f206c6f636b204865726f000000000000000000000000006044820152606401610445565b61079c83868484610df0565b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b6109bf6000610f8c565b565b60015460009073ffffffffffffffffffffffffffffffffffffffff163314610a45576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f63616c6c6572206973206e6f74206d65737361676520627573000000000000006044820152606401610445565b6000858152600260205260409020548614610abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f496e76616c696420736f757263652073656e64696e67206170700000000000006044820152606401610445565b610aff868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611001915050565b9695505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b60008281526002602090815260409182902083905581518481529081018390527f642e74356c0610a9f944fb1a2d88d2fb82c6b74921566eee8bc0f9bb30f74f03910160405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b73ffffffffffffffffffffffffffffffffffffffff8116610cfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610445565b610d0681610f8c565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b600455565b6060600060405180606001604052808481526020018573ffffffffffffffffffffffffffffffffffffffff16815260200186815250905080604051602001610dd791906122ba565b6040516020818303038152906040529150509392505050565b60008381526002602052604090205480610e66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4e6f2072656d6f7465206170702073657420666f722064737420636861696e006044820152606401610445565b848114610ef5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f5265636569766572206973206e6f7420696e20747275737465642072656d6f7460448201527f65206170707300000000000000000000000000000000000000000000000000006064820152608401610445565b6001546040517fac8a4c1b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063ac8a4c1b903490610f5390899089908990899060040161236a565b6000604051808303818588803b158015610f6c57600080fd5b505af1158015610f80573d6000803e3d6000fd5b50505050505050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008061100d84611351565b8051602082015160408084015190517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905293945091929091907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e90602401602060405180830381865afa9250505080156110e6575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526110e391810190611e8b565b60015b611197576040517f1b8276710000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff83811660248301527f00000000000000000000000000000000000000000000000000000000000000001690631b82767190604401600060405180830381600087803b15801561117a57600080fd5b505af115801561118e573d6000803e3d6000fd5b50505050611265565b3073ffffffffffffffffffffffffffffffffffffffff821603611263576040517f42842e0e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8481166024830152604482018490527f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b15801561124a57600080fd5b505af115801561125e573d6000803e3d6000fd5b505050505b505b6040517fb006410300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b0064103906112d79086906004016123a6565b600060405180830381600087803b1580156112f157600080fd5b505af1158015611305573d6000803e3d6000fd5b5050604080518481524660208201527f1f3a4fd9d309a82e1d37743b6e0a35dfa60738cceb88aa6117021faad3595776935001905060405180910390a150600098975050505050505050565b611359611376565b60008280602001905181019061136f91906123bb565b9392505050565b604051806060016040528061138961139d565b815260006020820181905260409091015290565b604051806101000160405280600081526020016113f56040518060c0016040528060008152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff1681525090565b81526020016114026115ba565b815260200161144c6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290529060e082015290565b8152604080516101608101825260008082526020828101829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082018190526101408201529101908152604080516101c08101825260008082526020828101829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082018190526101408201819052610160820181905261018082018190526101a08201529101908152604080516101c08101825260008082526020828101829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082018190526101408201819052610160820181905261018082018190526101a082015291019081526040805160808101825260008082526020828101829052928201819052606082015291015290565b6040518061014001604052806000815260200160008152602001600060048111156115e7576115e7611733565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e09091015290565b6000806040838503121561163157600080fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff81168114610d0657600080fd5b60006020828403121561167457600080fd5b813561136f81611640565b60006020828403121561169157600080fd5b5035919050565b6000806000806000608086880312156116b057600080fd5b8535945060208601359350604086013567ffffffffffffffff808211156116d657600080fd5b818801915088601f8301126116ea57600080fd5b8135818111156116f957600080fd5b89602082850101111561170b57600080fd5b602083019550809450505050606086013561172581611640565b809150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610d0657610d06611733565b6020810161177f83611762565b91905290565b604051610140810167ffffffffffffffff811182821017156117d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b604051610100810167ffffffffffffffff811182821017156117d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156117d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101c0810167ffffffffffffffff811182821017156117d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805163ffffffff811681146118cb57600080fd5b919050565b600060c082840312156118e257600080fd5b60405160c0810181811067ffffffffffffffff8211171561192c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806040525080915082518152602083015160208201526040830151604082015260608301516060820152611962608084016118b7565b608082015261197360a084016118b7565b60a08201525092915050565b8051600581106118cb57600080fd5b805180151581146118cb57600080fd5b805161ffff811681146118cb57600080fd5b805160ff811681146118cb57600080fd5b600061014082840312156119d457600080fd5b6119dc611785565b905081518152602082015160208201526119f86040830161197f565b6040820152611a096060830161198e565b6060820152611a1a6080830161199e565b6080820152611a2b60a083016118b7565b60a0820152611a3c60c083016118b7565b60c0820152611a4d60e083016119b0565b60e0820152610100611a608184016119b0565b90820152610120611a728382016119b0565b9082015292915050565b80516118cb81611640565b8051600281106118cb57600080fd5b60006101008284031215611aa957600080fd5b611ab16117d6565b9050815181526020820151602082015260408201516040820152611ad76060830161199e565b6060820152608082015167ffffffffffffffff81168114611af757600080fd5b6080820152611b0860a08301611a7c565b60a0820152611b1960c083016119b0565b60c0820152611b2a60e08301611a87565b60e082015292915050565b60006101608284031215611b4857600080fd5b611b50611821565b9050611b5b8261199e565b8152611b696020830161199e565b6020820152611b7a6040830161199e565b6040820152611b8b6060830161199e565b6060820152611b9c6080830161199e565b6080820152611bad60a0830161199e565b60a0820152611bbe60c0830161199e565b60c0820152611bcf60e0830161199e565b60e0820152610100611be281840161199e565b90820152610120611bf483820161199e565b90820152610140611a7283820161199e565b60006101c08284031215611c1957600080fd5b611c2161186c565b9050611c2c8261199e565b8152611c3a6020830161199e565b6020820152611c4b6040830161199e565b6040820152611c5c6060830161199e565b6060820152611c6d6080830161199e565b6080820152611c7e60a0830161199e565b60a0820152611c8f60c0830161199e565b60c0820152611ca060e0830161199e565b60e0820152610100611cb381840161199e565b90820152610120611cc583820161199e565b90820152610140611cd783820161199e565b90820152610160611ce983820161199e565b90820152610180611cfb83820161199e565b908201526101a0611a7283820161199e565b600060808284031215611d1f57600080fd5b6040516080810181811067ffffffffffffffff82111715611d69577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052905080611d788361199e565b8152611d866020840161199e565b6020820152611d976040840161199e565b6040820152611da86060840161199e565b60608201525092915050565b60006108808284031215611dc757600080fd5b611dcf6117d6565b905081518152611de283602084016118d0565b6020820152611df48360e084016119c1565b6040820152611e07836102208401611a96565b6060820152611e1a836103208401611b35565b6080820152611e2d836104808401611c06565b60a0820152611e40836106408401611c06565b60c0820152611b2a836108008401611d0d565b60006108808284031215611e6657600080fd5b61136f8383611db4565b600060208284031215611e8257600080fd5b61136f8261198e565b600060208284031215611e9d57600080fd5b815161136f81611640565b60058110611eb857611eb8611733565b9052565b80518252602081015160208301526040810151611edc6040840182611ea8565b506060810151611ef0606084018215159052565b506080810151611f06608084018261ffff169052565b5060a0810151611f1e60a084018263ffffffff169052565b5060c0810151611f3660c084018263ffffffff169052565b5060e0810151611f4b60e084018260ff169052565b506101008181015160ff81168483015250506101208181015160ff8116848301525b50505050565b80518252602081015160208301526040810151604083015261ffff606082015116606083015267ffffffffffffffff608082015116608083015273ffffffffffffffffffffffffffffffffffffffff60a08201511660a083015260ff60c08201511660c083015260e0810151611fe881611762565b8060e0840152505050565b805161ffff1682526020810151612010602084018261ffff169052565b506040810151612026604084018261ffff169052565b50606081015161203c606084018261ffff169052565b506080810151612052608084018261ffff169052565b5060a081015161206860a084018261ffff169052565b5060c081015161207e60c084018261ffff169052565b5060e081015161209460e084018261ffff169052565b506101008181015161ffff81168483015250506101208181015161ffff81168483015250506101408181015161ffff811684830152611f6d565b805161ffff16825260208101516120eb602084018261ffff169052565b506040810151612101604084018261ffff169052565b506060810151612117606084018261ffff169052565b50608081015161212d608084018261ffff169052565b5060a081015161214360a084018261ffff169052565b5060c081015161215960c084018261ffff169052565b5060e081015161216f60e084018261ffff169052565b506101008181015161ffff90811691840191909152610120808301518216908401526101408083015182169084015261016080830151821690840152610180808301518216908401526101a0808301519182168185015290611f6d565b80518252602081015180516020840152602081015160408401526040810151606084015260608101516080840152608081015163ffffffff80821660a08601528060a08401511660c0860152505050604081015161222d60e0840182611ebc565b506060810151612241610220840182611f73565b506080810151612255610320840182611ff3565b5060a08101516122696104808401826120ce565b5060c081015161227d6106408401826120ce565b5060e00151805161ffff90811661080084015260208201518116610820840152604082015181166108408401526060909101511661086090910152565b60006108c0820190506122ce8284516121cc565b602083015173ffffffffffffffffffffffffffffffffffffffff166108808301526040909201516108a09091015290565b6000815180845260005b8181101561232557602081850181015186830182015201612309565b81811115612337576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b84815283602082015260806040820152600061238960808301856122ff565b828103606084015261239b81856122ff565b979650505050505050565b61088081016123b582846121cc565b92915050565b60006108c082840312156123ce57600080fd5b6040516060810181811067ffffffffffffffff82111715612418577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040526124258484611db4565b815261088083015161243681611640565b60208201526108a0929092015160408301525091905056fea264697066735822122063f5c3fdb6783a34a05810acdc8ec8417943460b90e517c915ae7b497d5c753364736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c80638da5cb5b1161007f578063bd3583ae11610059578063bd3583ae14610297578063c0e07f28146102b7578063f2fde38b146102cd578063f9ecc6f5146102ed57600080fd5b80638da5cb5b14610212578063a1a227fa1461023d578063a60608711461026a57600080fd5b80635c9c7c73116100bb5780635c9c7c7314610175578063715018a6146101955780637246a948146101aa57806384a12b0f146101d757600080fd5b80631efedbe5146100e2578063230bb9f6146100f7578063547cad1214610155575b600080fd5b6100f56100f036600461161e565b61030d565b005b34801561010357600080fd5b5061012b7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561016157600080fd5b506100f5610170366004611662565b6107a4565b34801561018157600080fd5b506100f5610190366004611662565b61086c565b3480156101a157600080fd5b506100f5610934565b3480156101b657600080fd5b5060035461012b9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101e357600080fd5b506102046101f236600461167f565b60009081526002602052604090205490565b60405190815260200161014c565b34801561021e57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff1661012b565b34801561024957600080fd5b5060015461012b9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561027657600080fd5b5061028a610285366004611698565b6109c1565b60405161014c9190611772565b3480156102a357600080fd5b506100f56102b236600461161e565b610b09565b3480156102c357600080fd5b5061020460045481565b3480156102d957600080fd5b506100f56102e8366004611662565b610bd9565b3480156102f957600080fd5b506100f561030836600461167f565b610d09565b6040517f21d80111000000000000000000000000000000000000000000000000000000008152600481018390526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906321d801119060240161088060405180830381865afa15801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c09190611e53565b606081015160a0015190915073ffffffffffffffffffffffffffffffffffffffff161561044e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6865726f206973207175657374696e670000000000000000000000000000000060448201526064015b60405180910390fd5b6003546040517f37e246ad0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff909116906337e246ad906024016020604051808303816000875af11580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e39190611e70565b1561054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f617373697374696e672061756374696f6e0000000000000000000000000000006044820152606401610445565b60008281526002602052604081205490610565853385610d8f565b905060006105b3600454604080517e01000000000000000000000000000000000000000000000000000000000000602082015260228082019390935281518082039093018352604201905290565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd90606401600060405180830381600087803b15801561064a57600080fd5b505af115801561065e573d6000803e3d6000fd5b50506040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810189905230925073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169150636352211e90602401602060405180830381865afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107139190611e8b565b73ffffffffffffffffffffffffffffffffffffffff1614610790576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4661696c656420746f206c6f636b204865726f000000000000000000000000006044820152606401610445565b61079c83868484610df0565b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b6109bf6000610f8c565b565b60015460009073ffffffffffffffffffffffffffffffffffffffff163314610a45576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f63616c6c6572206973206e6f74206d65737361676520627573000000000000006044820152606401610445565b6000858152600260205260409020548614610abc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f496e76616c696420736f757263652073656e64696e67206170700000000000006044820152606401610445565b610aff868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611001915050565b9695505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b60008281526002602090815260409182902083905581518481529081018390527f642e74356c0610a9f944fb1a2d88d2fb82c6b74921566eee8bc0f9bb30f74f03910160405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b73ffffffffffffffffffffffffffffffffffffffff8116610cfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610445565b610d0681610f8c565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b600455565b6060600060405180606001604052808481526020018573ffffffffffffffffffffffffffffffffffffffff16815260200186815250905080604051602001610dd791906122ba565b6040516020818303038152906040529150509392505050565b60008381526002602052604090205480610e66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4e6f2072656d6f7465206170702073657420666f722064737420636861696e006044820152606401610445565b848114610ef5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f5265636569766572206973206e6f7420696e20747275737465642072656d6f7460448201527f65206170707300000000000000000000000000000000000000000000000000006064820152608401610445565b6001546040517fac8a4c1b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063ac8a4c1b903490610f5390899089908990899060040161236a565b6000604051808303818588803b158015610f6c57600080fd5b505af1158015610f80573d6000803e3d6000fd5b50505050505050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008061100d84611351565b8051602082015160408084015190517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905293945091929091907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e90602401602060405180830381865afa9250505080156110e6575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526110e391810190611e8b565b60015b611197576040517f1b8276710000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff83811660248301527f00000000000000000000000000000000000000000000000000000000000000001690631b82767190604401600060405180830381600087803b15801561117a57600080fd5b505af115801561118e573d6000803e3d6000fd5b50505050611265565b3073ffffffffffffffffffffffffffffffffffffffff821603611263576040517f42842e0e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8481166024830152604482018490527f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b15801561124a57600080fd5b505af115801561125e573d6000803e3d6000fd5b505050505b505b6040517fb006410300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b0064103906112d79086906004016123a6565b600060405180830381600087803b1580156112f157600080fd5b505af1158015611305573d6000803e3d6000fd5b5050604080518481524660208201527f1f3a4fd9d309a82e1d37743b6e0a35dfa60738cceb88aa6117021faad3595776935001905060405180910390a150600098975050505050505050565b611359611376565b60008280602001905181019061136f91906123bb565b9392505050565b604051806060016040528061138961139d565b815260006020820181905260409091015290565b604051806101000160405280600081526020016113f56040518060c0016040528060008152602001600081526020016000815260200160008152602001600063ffffffff168152602001600063ffffffff1681525090565b81526020016114026115ba565b815260200161144c6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290529060e082015290565b8152604080516101608101825260008082526020828101829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082018190526101408201529101908152604080516101c08101825260008082526020828101829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082018190526101408201819052610160820181905261018082018190526101a08201529101908152604080516101c08101825260008082526020828101829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082018190526101408201819052610160820181905261018082018190526101a082015291019081526040805160808101825260008082526020828101829052928201819052606082015291015290565b6040518061014001604052806000815260200160008152602001600060048111156115e7576115e7611733565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e09091015290565b6000806040838503121561163157600080fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff81168114610d0657600080fd5b60006020828403121561167457600080fd5b813561136f81611640565b60006020828403121561169157600080fd5b5035919050565b6000806000806000608086880312156116b057600080fd5b8535945060208601359350604086013567ffffffffffffffff808211156116d657600080fd5b818801915088601f8301126116ea57600080fd5b8135818111156116f957600080fd5b89602082850101111561170b57600080fd5b602083019550809450505050606086013561172581611640565b809150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610d0657610d06611733565b6020810161177f83611762565b91905290565b604051610140810167ffffffffffffffff811182821017156117d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b604051610100810167ffffffffffffffff811182821017156117d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156117d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101c0810167ffffffffffffffff811182821017156117d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805163ffffffff811681146118cb57600080fd5b919050565b600060c082840312156118e257600080fd5b60405160c0810181811067ffffffffffffffff8211171561192c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806040525080915082518152602083015160208201526040830151604082015260608301516060820152611962608084016118b7565b608082015261197360a084016118b7565b60a08201525092915050565b8051600581106118cb57600080fd5b805180151581146118cb57600080fd5b805161ffff811681146118cb57600080fd5b805160ff811681146118cb57600080fd5b600061014082840312156119d457600080fd5b6119dc611785565b905081518152602082015160208201526119f86040830161197f565b6040820152611a096060830161198e565b6060820152611a1a6080830161199e565b6080820152611a2b60a083016118b7565b60a0820152611a3c60c083016118b7565b60c0820152611a4d60e083016119b0565b60e0820152610100611a608184016119b0565b90820152610120611a728382016119b0565b9082015292915050565b80516118cb81611640565b8051600281106118cb57600080fd5b60006101008284031215611aa957600080fd5b611ab16117d6565b9050815181526020820151602082015260408201516040820152611ad76060830161199e565b6060820152608082015167ffffffffffffffff81168114611af757600080fd5b6080820152611b0860a08301611a7c565b60a0820152611b1960c083016119b0565b60c0820152611b2a60e08301611a87565b60e082015292915050565b60006101608284031215611b4857600080fd5b611b50611821565b9050611b5b8261199e565b8152611b696020830161199e565b6020820152611b7a6040830161199e565b6040820152611b8b6060830161199e565b6060820152611b9c6080830161199e565b6080820152611bad60a0830161199e565b60a0820152611bbe60c0830161199e565b60c0820152611bcf60e0830161199e565b60e0820152610100611be281840161199e565b90820152610120611bf483820161199e565b90820152610140611a7283820161199e565b60006101c08284031215611c1957600080fd5b611c2161186c565b9050611c2c8261199e565b8152611c3a6020830161199e565b6020820152611c4b6040830161199e565b6040820152611c5c6060830161199e565b6060820152611c6d6080830161199e565b6080820152611c7e60a0830161199e565b60a0820152611c8f60c0830161199e565b60c0820152611ca060e0830161199e565b60e0820152610100611cb381840161199e565b90820152610120611cc583820161199e565b90820152610140611cd783820161199e565b90820152610160611ce983820161199e565b90820152610180611cfb83820161199e565b908201526101a0611a7283820161199e565b600060808284031215611d1f57600080fd5b6040516080810181811067ffffffffffffffff82111715611d69577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052905080611d788361199e565b8152611d866020840161199e565b6020820152611d976040840161199e565b6040820152611da86060840161199e565b60608201525092915050565b60006108808284031215611dc757600080fd5b611dcf6117d6565b905081518152611de283602084016118d0565b6020820152611df48360e084016119c1565b6040820152611e07836102208401611a96565b6060820152611e1a836103208401611b35565b6080820152611e2d836104808401611c06565b60a0820152611e40836106408401611c06565b60c0820152611b2a836108008401611d0d565b60006108808284031215611e6657600080fd5b61136f8383611db4565b600060208284031215611e8257600080fd5b61136f8261198e565b600060208284031215611e9d57600080fd5b815161136f81611640565b60058110611eb857611eb8611733565b9052565b80518252602081015160208301526040810151611edc6040840182611ea8565b506060810151611ef0606084018215159052565b506080810151611f06608084018261ffff169052565b5060a0810151611f1e60a084018263ffffffff169052565b5060c0810151611f3660c084018263ffffffff169052565b5060e0810151611f4b60e084018260ff169052565b506101008181015160ff81168483015250506101208181015160ff8116848301525b50505050565b80518252602081015160208301526040810151604083015261ffff606082015116606083015267ffffffffffffffff608082015116608083015273ffffffffffffffffffffffffffffffffffffffff60a08201511660a083015260ff60c08201511660c083015260e0810151611fe881611762565b8060e0840152505050565b805161ffff1682526020810151612010602084018261ffff169052565b506040810151612026604084018261ffff169052565b50606081015161203c606084018261ffff169052565b506080810151612052608084018261ffff169052565b5060a081015161206860a084018261ffff169052565b5060c081015161207e60c084018261ffff169052565b5060e081015161209460e084018261ffff169052565b506101008181015161ffff81168483015250506101208181015161ffff81168483015250506101408181015161ffff811684830152611f6d565b805161ffff16825260208101516120eb602084018261ffff169052565b506040810151612101604084018261ffff169052565b506060810151612117606084018261ffff169052565b50608081015161212d608084018261ffff169052565b5060a081015161214360a084018261ffff169052565b5060c081015161215960c084018261ffff169052565b5060e081015161216f60e084018261ffff169052565b506101008181015161ffff90811691840191909152610120808301518216908401526101408083015182169084015261016080830151821690840152610180808301518216908401526101a0808301519182168185015290611f6d565b80518252602081015180516020840152602081015160408401526040810151606084015260608101516080840152608081015163ffffffff80821660a08601528060a08401511660c0860152505050604081015161222d60e0840182611ebc565b506060810151612241610220840182611f73565b506080810151612255610320840182611ff3565b5060a08101516122696104808401826120ce565b5060c081015161227d6106408401826120ce565b5060e00151805161ffff90811661080084015260208201518116610820840152604082015181166108408401526060909101511661086090910152565b60006108c0820190506122ce8284516121cc565b602083015173ffffffffffffffffffffffffffffffffffffffff166108808301526040909201516108a09091015290565b6000815180845260005b8181101561232557602081850181015186830182015201612309565b81811115612337576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b84815283602082015260806040820152600061238960808301856122ff565b828103606084015261239b81856122ff565b979650505050505050565b61088081016123b582846121cc565b92915050565b60006108c082840312156123ce57600080fd5b6040516060810181811067ffffffffffffffff82111715612418577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040526124258484611db4565b815261088083015161243681611640565b60208201526108a0929092015160408301525091905056fea264697066735822122063f5c3fdb6783a34a05810acdc8ec8417943460b90e517c915ae7b497d5c753364736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeMessage(bytes32,uint256,bytes,address)": {
        "details": "Must be called by MessageBug & sent from src chain by a trusted srcApp",
        "params": {
          "_executor": "Address who called the MessageBus execution function",
          "_message": "Arbitrary message bytes originated from and encoded by the source app contract",
          "_srcAddress": "The bytes32 address of the source app contract",
          "_srcChainId": "The source chain ID where the transfer is originated from"
        },
        "returns": {
          "_0": "status Enum containing options of Success, Fail, Retry"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "sendHero(uint256,uint256)": {
        "details": "This function enforces the caller to receive the Hero being bridged to the same address on another chain.Do NOT call this from other contracts, unless the contract is deployed on another chain to the same address, and can receive ERC721s. ",
        "params": {
          "_dstChainId": "The destination chain ID - typically, standard EVM chain ID, but differs on nonEVM chains",
          "_heroId": "specifics which hero msg.sender already holds and will transfer to the bridge contract"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Core app for handling cross chain messaging passing to bridge Hero NFTs",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "executeMessage(bytes32,uint256,bytes,address)": {
        "notice": "Executes a message called by MessageBus (MessageBusReceiver)"
      },
      "sendHero(uint256,uint256)": {
        "notice": "User must have an existing hero minted to bridge it."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/messaging/dfk/bridge/HeroBridge.sol:HeroBridge",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9589,
        "contract": "contracts/messaging/dfk/bridge/HeroBridge.sol:HeroBridge",
        "label": "messageBus",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 9593,
        "contract": "contracts/messaging/dfk/bridge/HeroBridge.sol:HeroBridge",
        "label": "trustedRemoteLookup",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_bytes32)"
      },
      {
        "astId": 8388,
        "contract": "contracts/messaging/dfk/bridge/HeroBridge.sol:HeroBridge",
        "label": "assistingAuction",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 8390,
        "contract": "contracts/messaging/dfk/bridge/HeroBridge.sol:HeroBridge",
        "label": "msgGasLimit",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint256,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}