{
  "address": "0xaeD5b25BE1c3163c907a471082640450F928DDFE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageBus",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pings",
          "type": "uint256"
        }
      ],
      "name": "Ping",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "disable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_srcAddress",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_srcChainId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "name": "executeMessage",
      "outputs": [
        {
          "internalType": "enum ISynMessagingReceiver.MsgExecutionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageBus",
      "outputs": [
        {
          "internalType": "contract IMessageBus",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numPings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dstChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_dstPingPongAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pings",
          "type": "uint256"
        }
      ],
      "name": "ping",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pingsEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xcc1d1496e709fabfe2a593ff692e33966494d07597647ed5c56ef5341d46e937",
  "receipt": {
    "to": null,
    "from": "0x0AF91FA049A7e1894F480bFE5bBa20142C6c29a9",
    "contractAddress": "0xaeD5b25BE1c3163c907a471082640450F928DDFE",
    "transactionIndex": 1,
    "gasUsed": "854848",
    "logsBloom": "0x
    "blockHash": "0x36a32787f53089c009e0f9d68d90b2b73db4042481288a774cc4f36ef5fd0334",
    "transactionHash": "0xcc1d1496e709fabfe2a593ff692e33966494d07597647ed5c56ef5341d46e937",
    "logs": [],
    "blockNumber": 9253577,
    "cumulativeGasUsed": "1041638",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xe0fa08834465EcC36c494F2b6C87b82Ab7970413"
  ],
  "solcInputHash": "eb7e55f1a3b2e54ccb5aab1075126bce",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageBus\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pings\",\"type\":\"uint256\"}],\"name\":\"Ping\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_srcAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_srcChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"name\":\"executeMessage\",\"outputs\":[{\"internalType\":\"enum ISynMessagingReceiver.MsgExecutionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageBus\",\"outputs\":[{\"internalType\":\"contract IMessageBus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numPings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dstChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_dstPingPongAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pings\",\"type\":\"uint256\"}],\"name\":\"ping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pingsEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeMessage(bytes32,uint256,bytes,address)\":{\"params\":{\"_executor\":\"Address who called the MessageBus execution function\",\"_message\":\"Arbitrary message bytes originated from and encoded by the source app contract\",\"_srcAddress\":\"The bytes32 address of the source app contract\",\"_srcChainId\":\"The source chain ID where the transfer is originated from\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeMessage(bytes32,uint256,bytes,address)\":{\"notice\":\"Called by MessageBus (MessageBusReceiver)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/apps/PingPong.sol\":\"PingPong\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/apps/PingPong.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"../interfaces/ISynMessagingReceiver.sol\\\";\\nimport \\\"../interfaces/IMessageBus.sol\\\";\\n\\ncontract PingPong is ISynMessagingReceiver {\\n    // MessageBus is responsible for sending messages to receiving apps and sending messages across chains\\n    IMessageBus public messageBus;\\n    // whether to ping and pong back and forth\\n    bool public pingsEnabled;\\n    // event emitted everytime it is pinged, counting number of pings\\n    event Ping(uint256 pings);\\n    // total pings in a loops\\n    uint256 public maxPings;\\n    uint256 public numPings;\\n\\n    constructor(address _messageBus) {\\n        pingsEnabled = true;\\n        messageBus = IMessageBus(_messageBus);\\n        maxPings = 5;\\n    }\\n\\n    function disable() external {\\n        pingsEnabled = false;\\n    }\\n\\n    function ping(uint256 _dstChainId, address _dstPingPongAddr, uint256 pings) public {\\n        require(address(this).balance > 0, \\\"the balance of this contract needs to be able to pay for native gas\\\");\\n        require(pingsEnabled, \\\"pingsEnabled is false. messages stopped\\\");\\n        require(maxPings > pings, \\\"maxPings has been reached, no more looping\\\");\\n\\n        emit Ping(pings);\\n\\n        bytes memory message = abi.encode(pings);\\n\\n        // this will have to be changed soon (WIP, options disabled)\\n        uint256 fee = messageBus.estimateFee(_dstChainId, bytes(\\\"\\\"));\\n        require(address(this).balance >= fee, \\\"not enough gas for fees\\\");\\n\\n        messageBus.sendMessage{value: fee}(\\n            bytes32(uint256(uint160(_dstPingPongAddr))), _dstChainId, message, bytes(\\\"\\\")\\n        );\\n    }\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver)\\n     * @param _srcAddress The bytes32 address of the source app contract\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessage(\\n        bytes32 _srcAddress,\\n        uint256 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external returns (ISynMessagingReceiver.MsgExecutionStatus) {\\n        require(msg.sender == address(messageBus));\\n        // In production the srcAddress should be a verified sender\\n\\n        address fromAddress = address(uint160(uint256(_srcAddress)));\\n\\n        uint256 pings = abi.decode(_message, (uint256));\\n\\n        // recursively call ping again upon pong\\n        ++pings;\\n        numPings = pings;\\n\\n        ping(_srcChainId, fromAddress, pings);\\n        // return ISynMessagingReceiver.MsgExecutionStatus.Success;\\n    }\\n\\n    // allow this contract to receive ether\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n}\",\"keccak256\":\"0x5b0e7ac946a90aad358c60ceda63e4caabc3703c3a9e2e0e625d0e61d7a1a24d\",\"license\":\"MIT\"},\"contracts/messaging/interfaces/IMessageBus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\ninterface IMessageBus {\\n    \\n    /**\\n     * @notice Sends a message to a receiving contract address on another chain. \\n     * Sender must make sure that the message is unique and not a duplicate message.\\n     * @param _receiver The bytes32 address of the destination contract to be called\\n     * @param _dstChainId The destination chain ID - typically, standard EVM chain ID, but differs on nonEVM chains\\n     * @param _message The arbitrary payload to pass to the destination chain receiver\\n     * @param _options Versioned struct used to instruct relayer on how to proceed with gas limits\\n     */\\n    function sendMessage(\\n        bytes32 _receiver,\\n        uint256 _dstChainId,\\n        bytes calldata _message,\\n        bytes calldata _options\\n    ) external payable;\\n\\n    /**\\n     * @notice Relayer executes messages through an authenticated method to the destination receiver\\n     based on the originating transaction on source chain\\n     * @param _srcChainId Originating chain ID - typically a standard EVM chain ID, but may refer to a Synapse-specific chain ID on nonEVM chains\\n     * @param _srcAddress Originating bytes address of the message sender on the srcChain\\n     * @param _dstAddress Destination address that the arbitrary message will be passed to\\n     * @param _gasLimit Gas limit to be passed alongside the message, depending on the fee paid on srcChain\\n     * @param _message Arbitrary message payload to pass to the destination chain receiver\\n     */\\n    function executeMessage(\\n        uint256 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint256 _gasLimit,\\n        uint256 _nonce,\\n        bytes calldata _message\\n    ) external;\\n\\n\\n    /**\\n     * @notice Returns srcGasToken fee to charge in wei for the cross-chain message based on the gas limit\\n     * @param _options Versioned struct used to instruct relayer on how to proceed with gas limits. Contains data on gas limit to submit tx with.\\n     */\\n    function estimateFee(uint256 _dstChainId, bytes calldata _options)\\n        external\\n        returns (uint256);\\n\\n    /**\\n     * @notice Withdraws message fee in the form of native gas token.\\n     * @param _account The address receiving the fee.\\n     */\\n    function withdrawFee(\\n        address _account\\n    ) external;\\n\\n\\n\\n}\\n\",\"keccak256\":\"0xcc13995e79a6f8928551bec0ff911b8d9de8ab71fbbb561d1b44e8d11fd1d2b2\",\"license\":\"MIT\"},\"contracts/messaging/interfaces/ISynMessagingReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface ISynMessagingReceiver {\\n\\n    // Maps chain ID to the bytes32 trusted addresses allowed to be source senders\\n    // mapping(uint256 => bytes32) internal trustedRemoteLookup;\\n\\n\\n    /** \\n     * @notice MsgExecutionStatus state\\n     * @return Success execution succeeded, finalized\\n     * @return Fail // execution failed, finalized\\n     * @return Retry // execution failed or rejected, set to be retryable\\n    */ \\n    enum MsgExecutionStatus {\\n        Success, \\n        Fail\\n    }\\n\\n     /**\\n     * @notice Called by MessageBus \\n     * @dev MUST be permissioned to trusted source apps via trustedRemote\\n     * @param _srcAddress The bytes32 address of the source app contract\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessage(\\n        bytes32 _srcAddress,\\n        uint256 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external returns (MsgExecutionStatus);\\n}\\n    \",\"keccak256\":\"0x9081c7651818c6d57dbbe3053422ca5789b7cee0d9a6d79c7a912fc02b30fd58\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ee5380380610ee5833981810160405281019061003291906100fe565b6001600060146101000a81548160ff021916908315150217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060056001819055505061012b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100cb826100a0565b9050919050565b6100db816100c0565b81146100e657600080fd5b50565b6000815190506100f8816100d2565b92915050565b6000602082840312156101145761011361009b565b5b6000610122848285016100e9565b91505092915050565b610dab8061013a6000396000f3fe6080604052600436106100745760003560e01c806358f2948f1161004e57806358f2948f146100ea5780636c7c091b14610113578063a1a227fa1461013e578063a6060871146101695761007b565b80632f2770db1461007d578063315f7a7f146100945780633ba6107f146100bf5761007b565b3661007b57005b005b34801561008957600080fd5b506100926101a6565b005b3480156100a057600080fd5b506100a96101c2565b6040516100b691906105a4565b60405180910390f35b3480156100cb57600080fd5b506100d46101c8565b6040516100e191906105da565b60405180910390f35b3480156100f657600080fd5b50610111600480360381019061010c9190610689565b6101db565b005b34801561011f57600080fd5b506101286104c2565b60405161013591906105a4565b60405180910390f35b34801561014a57600080fd5b506101536104c8565b604051610160919061073b565b60405180910390f35b34801561017557600080fd5b50610190600480360381019061018b91906107f1565b6104ec565b60405161019d91906108f0565b60405180910390f35b60008060146101000a81548160ff021916908315150217905550565b60025481565b600060149054906101000a900460ff1681565b6000471161021e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610215906109b4565b60405180910390fd5b600060149054906101000a900460ff1661026d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026490610a46565b60405180910390fd5b80600154116102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a890610ad8565b60405180910390fd5b7f48257dc961b6f792c2b78a080dacfed693b660960a702de21cee364e20270e2f816040516102e091906105a4565b60405180910390a16000816040516020016102fb91906105a4565b604051602081830303815290604052905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635da6d2c486604051806020016040528060008152506040518363ffffffff1660e01b8152600401610379929190610b91565b6020604051808303816000875af1158015610398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc9190610bd6565b905080471015610401576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f890610c4f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ac8a4c1b828673ffffffffffffffffffffffffffffffffffffffff1660001b8886604051806020016040528060008152506040518663ffffffff1660e01b81526004016104899493929190610c7e565b6000604051808303818588803b1580156104a257600080fd5b505af11580156104b6573d6000803e3d6000fd5b50505050505050505050565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054757600080fd5b60008660001c9050600085858101906105609190610cd1565b90508061056c90610d2d565b9050806002819055506105808783836101db565b505095945050505050565b6000819050919050565b61059e8161058b565b82525050565b60006020820190506105b96000830184610595565b92915050565b60008115159050919050565b6105d4816105bf565b82525050565b60006020820190506105ef60008301846105cb565b92915050565b600080fd5b600080fd5b6106088161058b565b811461061357600080fd5b50565b600081359050610625816105ff565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106568261062b565b9050919050565b6106668161064b565b811461067157600080fd5b50565b6000813590506106838161065d565b92915050565b6000806000606084860312156106a2576106a16105f5565b5b60006106b086828701610616565b93505060206106c186828701610674565b92505060406106d286828701610616565b9150509250925092565b6000819050919050565b60006107016106fc6106f78461062b565b6106dc565b61062b565b9050919050565b6000610713826106e6565b9050919050565b600061072582610708565b9050919050565b6107358161071a565b82525050565b6000602082019050610750600083018461072c565b92915050565b6000819050919050565b61076981610756565b811461077457600080fd5b50565b60008135905061078681610760565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107b1576107b061078c565b5b8235905067ffffffffffffffff8111156107ce576107cd610791565b5b6020830191508360018202830111156107ea576107e9610796565b5b9250929050565b60008060008060006080868803121561080d5761080c6105f5565b5b600061081b88828901610777565b955050602061082c88828901610616565b945050604086013567ffffffffffffffff81111561084d5761084c6105fa565b5b6108598882890161079b565b9350935050606061086c88828901610674565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106108b9576108b8610879565b5b50565b60008190506108ca826108a8565b919050565b60006108da826108bc565b9050919050565b6108ea816108cf565b82525050565b600060208201905061090560008301846108e1565b92915050565b600082825260208201905092915050565b7f7468652062616c616e6365206f66207468697320636f6e7472616374206e656560008201527f647320746f2062652061626c6520746f2070617920666f72206e61746976652060208201527f6761730000000000000000000000000000000000000000000000000000000000604082015250565b600061099e60438361090b565b91506109a98261091c565b606082019050919050565b600060208201905081810360008301526109cd81610991565b9050919050565b7f70696e6773456e61626c65642069732066616c73652e206d657373616765732060008201527f73746f7070656400000000000000000000000000000000000000000000000000602082015250565b6000610a3060278361090b565b9150610a3b826109d4565b604082019050919050565b60006020820190508181036000830152610a5f81610a23565b9050919050565b7f6d617850696e677320686173206265656e20726561636865642c206e6f206d6f60008201527f7265206c6f6f70696e6700000000000000000000000000000000000000000000602082015250565b6000610ac2602a8361090b565b9150610acd82610a66565b604082019050919050565b60006020820190508181036000830152610af181610ab5565b9050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b32578082015181840152602081019050610b17565b83811115610b41576000848401525b50505050565b6000601f19601f8301169050919050565b6000610b6382610af8565b610b6d8185610b03565b9350610b7d818560208601610b14565b610b8681610b47565b840191505092915050565b6000604082019050610ba66000830185610595565b8181036020830152610bb88184610b58565b90509392505050565b600081519050610bd0816105ff565b92915050565b600060208284031215610bec57610beb6105f5565b5b6000610bfa84828501610bc1565b91505092915050565b7f6e6f7420656e6f7567682067617320666f722066656573000000000000000000600082015250565b6000610c3960178361090b565b9150610c4482610c03565b602082019050919050565b60006020820190508181036000830152610c6881610c2c565b9050919050565b610c7881610756565b82525050565b6000608082019050610c936000830187610c6f565b610ca06020830186610595565b8181036040830152610cb28185610b58565b90508181036060830152610cc68184610b58565b905095945050505050565b600060208284031215610ce757610ce66105f5565b5b6000610cf584828501610616565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d388261058b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d6a57610d69610cfe565b5b60018201905091905056fea2646970667358221220ff90eca4fea0d3f06f6a424417b81d1a973686128853f7886aed87a6cfb8559564736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c806358f2948f1161004e57806358f2948f146100ea5780636c7c091b14610113578063a1a227fa1461013e578063a6060871146101695761007b565b80632f2770db1461007d578063315f7a7f146100945780633ba6107f146100bf5761007b565b3661007b57005b005b34801561008957600080fd5b506100926101a6565b005b3480156100a057600080fd5b506100a96101c2565b6040516100b691906105a4565b60405180910390f35b3480156100cb57600080fd5b506100d46101c8565b6040516100e191906105da565b60405180910390f35b3480156100f657600080fd5b50610111600480360381019061010c9190610689565b6101db565b005b34801561011f57600080fd5b506101286104c2565b60405161013591906105a4565b60405180910390f35b34801561014a57600080fd5b506101536104c8565b604051610160919061073b565b60405180910390f35b34801561017557600080fd5b50610190600480360381019061018b91906107f1565b6104ec565b60405161019d91906108f0565b60405180910390f35b60008060146101000a81548160ff021916908315150217905550565b60025481565b600060149054906101000a900460ff1681565b6000471161021e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610215906109b4565b60405180910390fd5b600060149054906101000a900460ff1661026d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026490610a46565b60405180910390fd5b80600154116102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a890610ad8565b60405180910390fd5b7f48257dc961b6f792c2b78a080dacfed693b660960a702de21cee364e20270e2f816040516102e091906105a4565b60405180910390a16000816040516020016102fb91906105a4565b604051602081830303815290604052905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635da6d2c486604051806020016040528060008152506040518363ffffffff1660e01b8152600401610379929190610b91565b6020604051808303816000875af1158015610398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc9190610bd6565b905080471015610401576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f890610c4f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ac8a4c1b828673ffffffffffffffffffffffffffffffffffffffff1660001b8886604051806020016040528060008152506040518663ffffffff1660e01b81526004016104899493929190610c7e565b6000604051808303818588803b1580156104a257600080fd5b505af11580156104b6573d6000803e3d6000fd5b50505050505050505050565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054757600080fd5b60008660001c9050600085858101906105609190610cd1565b90508061056c90610d2d565b9050806002819055506105808783836101db565b505095945050505050565b6000819050919050565b61059e8161058b565b82525050565b60006020820190506105b96000830184610595565b92915050565b60008115159050919050565b6105d4816105bf565b82525050565b60006020820190506105ef60008301846105cb565b92915050565b600080fd5b600080fd5b6106088161058b565b811461061357600080fd5b50565b600081359050610625816105ff565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106568261062b565b9050919050565b6106668161064b565b811461067157600080fd5b50565b6000813590506106838161065d565b92915050565b6000806000606084860312156106a2576106a16105f5565b5b60006106b086828701610616565b93505060206106c186828701610674565b92505060406106d286828701610616565b9150509250925092565b6000819050919050565b60006107016106fc6106f78461062b565b6106dc565b61062b565b9050919050565b6000610713826106e6565b9050919050565b600061072582610708565b9050919050565b6107358161071a565b82525050565b6000602082019050610750600083018461072c565b92915050565b6000819050919050565b61076981610756565b811461077457600080fd5b50565b60008135905061078681610760565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107b1576107b061078c565b5b8235905067ffffffffffffffff8111156107ce576107cd610791565b5b6020830191508360018202830111156107ea576107e9610796565b5b9250929050565b60008060008060006080868803121561080d5761080c6105f5565b5b600061081b88828901610777565b955050602061082c88828901610616565b945050604086013567ffffffffffffffff81111561084d5761084c6105fa565b5b6108598882890161079b565b9350935050606061086c88828901610674565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106108b9576108b8610879565b5b50565b60008190506108ca826108a8565b919050565b60006108da826108bc565b9050919050565b6108ea816108cf565b82525050565b600060208201905061090560008301846108e1565b92915050565b600082825260208201905092915050565b7f7468652062616c616e6365206f66207468697320636f6e7472616374206e656560008201527f647320746f2062652061626c6520746f2070617920666f72206e61746976652060208201527f6761730000000000000000000000000000000000000000000000000000000000604082015250565b600061099e60438361090b565b91506109a98261091c565b606082019050919050565b600060208201905081810360008301526109cd81610991565b9050919050565b7f70696e6773456e61626c65642069732066616c73652e206d657373616765732060008201527f73746f7070656400000000000000000000000000000000000000000000000000602082015250565b6000610a3060278361090b565b9150610a3b826109d4565b604082019050919050565b60006020820190508181036000830152610a5f81610a23565b9050919050565b7f6d617850696e677320686173206265656e20726561636865642c206e6f206d6f60008201527f7265206c6f6f70696e6700000000000000000000000000000000000000000000602082015250565b6000610ac2602a8361090b565b9150610acd82610a66565b604082019050919050565b60006020820190508181036000830152610af181610ab5565b9050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b32578082015181840152602081019050610b17565b83811115610b41576000848401525b50505050565b6000601f19601f8301169050919050565b6000610b6382610af8565b610b6d8185610b03565b9350610b7d818560208601610b14565b610b8681610b47565b840191505092915050565b6000604082019050610ba66000830185610595565b8181036020830152610bb88184610b58565b90509392505050565b600081519050610bd0816105ff565b92915050565b600060208284031215610bec57610beb6105f5565b5b6000610bfa84828501610bc1565b91505092915050565b7f6e6f7420656e6f7567682067617320666f722066656573000000000000000000600082015250565b6000610c3960178361090b565b9150610c4482610c03565b602082019050919050565b60006020820190508181036000830152610c6881610c2c565b9050919050565b610c7881610756565b82525050565b6000608082019050610c936000830187610c6f565b610ca06020830186610595565b8181036040830152610cb28185610b58565b90508181036060830152610cc68184610b58565b905095945050505050565b600060208284031215610ce757610ce66105f5565b5b6000610cf584828501610616565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d388261058b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d6a57610d69610cfe565b5b60018201905091905056fea2646970667358221220ff90eca4fea0d3f06f6a424417b81d1a973686128853f7886aed87a6cfb8559564736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeMessage(bytes32,uint256,bytes,address)": {
        "params": {
          "_executor": "Address who called the MessageBus execution function",
          "_message": "Arbitrary message bytes originated from and encoded by the source app contract",
          "_srcAddress": "The bytes32 address of the source app contract",
          "_srcChainId": "The source chain ID where the transfer is originated from"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "executeMessage(bytes32,uint256,bytes,address)": {
        "notice": "Called by MessageBus (MessageBusReceiver)"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 579,
        "contract": "contracts/messaging/apps/PingPong.sol:PingPong",
        "label": "messageBus",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IMessageBus)2164"
      },
      {
        "astId": 581,
        "contract": "contracts/messaging/apps/PingPong.sol:PingPong",
        "label": "pingsEnabled",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 587,
        "contract": "contracts/messaging/apps/PingPong.sol:PingPong",
        "label": "maxPings",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 589,
        "contract": "contracts/messaging/apps/PingPong.sol:PingPong",
        "label": "numPings",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IMessageBus)2164": {
        "encoding": "inplace",
        "label": "contract IMessageBus",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}